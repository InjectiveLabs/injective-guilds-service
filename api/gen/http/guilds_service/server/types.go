// Code generated by goa v3.6.2, DO NOT EDIT.
//
// GuildsService HTTP server types
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-guilds-service/api/design -o ../

package server

import (
	guildsservice "github.com/InjectiveLabs/injective-guilds-service/api/gen/guilds_service"
	goa "goa.design/goa/v3/pkg"
)

// EnterGuildRequestBody is the type of the "GuildsService" service
// "EnterGuild" endpoint HTTP request body.
type EnterGuildRequestBody struct {
	InjectiveAddress *string `form:"injective_address,omitempty" json:"injective_address,omitempty" xml:"injective_address,omitempty"`
	Params           *string `form:"params,omitempty" json:"params,omitempty" xml:"params,omitempty"`
}

// GetAllGuildsResponseBody is the type of the "GuildsService" service
// "GetAllGuilds" endpoint HTTP response body.
type GetAllGuildsResponseBody struct {
	// Existing guilds
	Guilds []*GuildResponseBody `form:"guilds,omitempty" json:"guilds,omitempty" xml:"guilds,omitempty"`
}

// GetSingleGuildResponseBody is the type of the "GuildsService" service
// "GetSingleGuild" endpoint HTTP response body.
type GetSingleGuildResponseBody struct {
	// Existing guilds
	Guild *GuildResponseBody `form:"guild,omitempty" json:"guild,omitempty" xml:"guild,omitempty"`
}

// GetGuildMembersResponseBody is the type of the "GuildsService" service
// "GetGuildMembers" endpoint HTTP response body.
type GetGuildMembersResponseBody struct {
	// Member of given guild
	Members []*GuildMemberResponseBody `form:"members,omitempty" json:"members,omitempty" xml:"members,omitempty"`
}

// GetGuildMasterAddressResponseBody is the type of the "GuildsService" service
// "GetGuildMasterAddress" endpoint HTTP response body.
type GetGuildMasterAddressResponseBody struct {
	MasterAddress *string `form:"master_address,omitempty" json:"master_address,omitempty" xml:"master_address,omitempty"`
}

// GetGuildDefaultMemberResponseBody is the type of the "GuildsService" service
// "GetGuildDefaultMember" endpoint HTTP response body.
type GetGuildDefaultMemberResponseBody struct {
	DefaultMember *GuildMemberResponseBody `form:"default_member,omitempty" json:"default_member,omitempty" xml:"default_member,omitempty"`
}

// EnterGuildResponseBody is the type of the "GuildsService" service
// "EnterGuild" endpoint HTTP response body.
type EnterGuildResponseBody struct {
	JoinStatus *string `form:"join_status,omitempty" json:"join_status,omitempty" xml:"join_status,omitempty"`
	Message    *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// LeaveGuildResponseBody is the type of the "GuildsService" service
// "LeaveGuild" endpoint HTTP response body.
type LeaveGuildResponseBody struct {
	LeaveStatus *string `form:"leave_status,omitempty" json:"leave_status,omitempty" xml:"leave_status,omitempty"`
}

// GetGuildMarketsResponseBody is the type of the "GuildsService" service
// "GetGuildMarkets" endpoint HTTP response body.
type GetGuildMarketsResponseBody struct {
	Markets []*MarketResponseBody `form:"markets,omitempty" json:"markets,omitempty" xml:"markets,omitempty"`
}

// GetGuildPortfoliosResponseBody is the type of the "GuildsService" service
// "GetGuildPortfolios" endpoint HTTP response body.
type GetGuildPortfoliosResponseBody struct {
	Portfolios []*SingleGuildPortfolioResponseBody `form:"portfolios,omitempty" json:"portfolios,omitempty" xml:"portfolios,omitempty"`
}

// GetAccountInfoResponseBody is the type of the "GuildsService" service
// "GetAccountInfo" endpoint HTTP response body.
type GetAccountInfoResponseBody struct {
	Data *GuildMemberResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// GetAccountPortfolioResponseBody is the type of the "GuildsService" service
// "GetAccountPortfolio" endpoint HTTP response body.
type GetAccountPortfolioResponseBody struct {
	Data *SingleAccountPortfolioResponseBody `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
}

// GetAccountPortfoliosResponseBody is the type of the "GuildsService" service
// "GetAccountPortfolios" endpoint HTTP response body.
type GetAccountPortfoliosResponseBody struct {
	Portfolios []*SingleAccountPortfolioResponseBody `form:"portfolios,omitempty" json:"portfolios,omitempty" xml:"portfolios,omitempty"`
}

// GetAccountMonthlyPortfoliosResponseBody is the type of the "GuildsService"
// service "GetAccountMonthlyPortfolios" endpoint HTTP response body.
type GetAccountMonthlyPortfoliosResponseBody struct {
	Portfolios []*MonthlyAccountPortfolioResponseBody `form:"portfolios,omitempty" json:"portfolios,omitempty" xml:"portfolios,omitempty"`
}

// GetAllGuildsNotFoundResponseBody is the type of the "GuildsService" service
// "GetAllGuilds" endpoint HTTP response body for the "not_found" error.
type GetAllGuildsNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAllGuildsInternalResponseBody is the type of the "GuildsService" service
// "GetAllGuilds" endpoint HTTP response body for the "internal" error.
type GetAllGuildsInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetSingleGuildNotFoundResponseBody is the type of the "GuildsService"
// service "GetSingleGuild" endpoint HTTP response body for the "not_found"
// error.
type GetSingleGuildNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetSingleGuildInternalResponseBody is the type of the "GuildsService"
// service "GetSingleGuild" endpoint HTTP response body for the "internal"
// error.
type GetSingleGuildInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMembersNotFoundResponseBody is the type of the "GuildsService"
// service "GetGuildMembers" endpoint HTTP response body for the "not_found"
// error.
type GetGuildMembersNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMembersInternalResponseBody is the type of the "GuildsService"
// service "GetGuildMembers" endpoint HTTP response body for the "internal"
// error.
type GetGuildMembersInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMasterAddressNotFoundResponseBody is the type of the "GuildsService"
// service "GetGuildMasterAddress" endpoint HTTP response body for the
// "not_found" error.
type GetGuildMasterAddressNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMasterAddressInternalResponseBody is the type of the "GuildsService"
// service "GetGuildMasterAddress" endpoint HTTP response body for the
// "internal" error.
type GetGuildMasterAddressInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildDefaultMemberNotFoundResponseBody is the type of the "GuildsService"
// service "GetGuildDefaultMember" endpoint HTTP response body for the
// "not_found" error.
type GetGuildDefaultMemberNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildDefaultMemberInternalResponseBody is the type of the "GuildsService"
// service "GetGuildDefaultMember" endpoint HTTP response body for the
// "internal" error.
type GetGuildDefaultMemberInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// EnterGuildNotFoundResponseBody is the type of the "GuildsService" service
// "EnterGuild" endpoint HTTP response body for the "not_found" error.
type EnterGuildNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// EnterGuildInternalResponseBody is the type of the "GuildsService" service
// "EnterGuild" endpoint HTTP response body for the "internal" error.
type EnterGuildInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// LeaveGuildNotFoundResponseBody is the type of the "GuildsService" service
// "LeaveGuild" endpoint HTTP response body for the "not_found" error.
type LeaveGuildNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// LeaveGuildInternalResponseBody is the type of the "GuildsService" service
// "LeaveGuild" endpoint HTTP response body for the "internal" error.
type LeaveGuildInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMarketsNotFoundResponseBody is the type of the "GuildsService"
// service "GetGuildMarkets" endpoint HTTP response body for the "not_found"
// error.
type GetGuildMarketsNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildMarketsInternalResponseBody is the type of the "GuildsService"
// service "GetGuildMarkets" endpoint HTTP response body for the "internal"
// error.
type GetGuildMarketsInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildPortfoliosNotFoundResponseBody is the type of the "GuildsService"
// service "GetGuildPortfolios" endpoint HTTP response body for the "not_found"
// error.
type GetGuildPortfoliosNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetGuildPortfoliosInternalResponseBody is the type of the "GuildsService"
// service "GetGuildPortfolios" endpoint HTTP response body for the "internal"
// error.
type GetGuildPortfoliosInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountInfoNotFoundResponseBody is the type of the "GuildsService"
// service "GetAccountInfo" endpoint HTTP response body for the "not_found"
// error.
type GetAccountInfoNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountInfoInternalResponseBody is the type of the "GuildsService"
// service "GetAccountInfo" endpoint HTTP response body for the "internal"
// error.
type GetAccountInfoInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountPortfolioNotFoundResponseBody is the type of the "GuildsService"
// service "GetAccountPortfolio" endpoint HTTP response body for the
// "not_found" error.
type GetAccountPortfolioNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountPortfolioInternalResponseBody is the type of the "GuildsService"
// service "GetAccountPortfolio" endpoint HTTP response body for the "internal"
// error.
type GetAccountPortfolioInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountPortfoliosNotFoundResponseBody is the type of the "GuildsService"
// service "GetAccountPortfolios" endpoint HTTP response body for the
// "not_found" error.
type GetAccountPortfoliosNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountPortfoliosInternalResponseBody is the type of the "GuildsService"
// service "GetAccountPortfolios" endpoint HTTP response body for the
// "internal" error.
type GetAccountPortfoliosInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountMonthlyPortfoliosNotFoundResponseBody is the type of the
// "GuildsService" service "GetAccountMonthlyPortfolios" endpoint HTTP response
// body for the "not_found" error.
type GetAccountMonthlyPortfoliosNotFoundResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GetAccountMonthlyPortfoliosInternalResponseBody is the type of the
// "GuildsService" service "GetAccountMonthlyPortfolios" endpoint HTTP response
// body for the "internal" error.
type GetAccountMonthlyPortfoliosInternalResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// GuildResponseBody is used to define fields on response body types.
type GuildResponseBody struct {
	ID                   string                            `form:"id" json:"id" xml:"id"`
	Name                 string                            `form:"name" json:"name" xml:"name"`
	Description          string                            `form:"description" json:"description" xml:"description"`
	MasterAddress        string                            `form:"master_address" json:"master_address" xml:"master_address"`
	Requirements         []*RequirementResponseBody        `form:"requirements" json:"requirements" xml:"requirements"`
	StakingRequirement   string                            `form:"staking_requirement" json:"staking_requirement" xml:"staking_requirement"`
	Capacity             int                               `form:"capacity" json:"capacity" xml:"capacity"`
	MemberCount          int                               `form:"member_count" json:"member_count" xml:"member_count"`
	CurrentPortfolio     *SingleGuildPortfolioResponseBody `form:"current_portfolio,omitempty" json:"current_portfolio,omitempty" xml:"current_portfolio,omitempty"`
	DefaultMemberAddress string                            `form:"default_member_address" json:"default_member_address" xml:"default_member_address"`
}

// RequirementResponseBody is used to define fields on response body types.
type RequirementResponseBody struct {
	Denom        string  `form:"denom" json:"denom" xml:"denom"`
	MinAmountUsd float64 `form:"min_amount_usd" json:"min_amount_usd" xml:"min_amount_usd"`
	MinAmount    float64 `form:"min_amount" json:"min_amount" xml:"min_amount"`
}

// SingleGuildPortfolioResponseBody is used to define fields on response body
// types.
type SingleGuildPortfolioResponseBody struct {
	GuildID   *string                `form:"guild_id,omitempty" json:"guild_id,omitempty" xml:"guild_id,omitempty"`
	Balances  []*BalanceResponseBody `form:"balances" json:"balances" xml:"balances"`
	UpdatedAt int64                  `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// BalanceResponseBody is used to define fields on response body types.
type BalanceResponseBody struct {
	Denom            string  `form:"denom" json:"denom" xml:"denom"`
	TotalBalance     string  `form:"total_balance" json:"total_balance" xml:"total_balance"`
	AvailableBalance string  `form:"available_balance" json:"available_balance" xml:"available_balance"`
	UnrealizedPnl    string  `form:"unrealized_pnl" json:"unrealized_pnl" xml:"unrealized_pnl"`
	MarginHold       string  `form:"margin_hold" json:"margin_hold" xml:"margin_hold"`
	PriceUsd         float64 `form:"price_usd" json:"price_usd" xml:"price_usd"`
}

// GuildMemberResponseBody is used to define fields on response body types.
type GuildMemberResponseBody struct {
	InjectiveAddress     string  `form:"injective_address" json:"injective_address" xml:"injective_address"`
	IsDefaultGuildMember bool    `form:"is_default_guild_member" json:"is_default_guild_member" xml:"is_default_guild_member"`
	Since                int64   `form:"since" json:"since" xml:"since"`
	GuildID              *string `form:"guild_id,omitempty" json:"guild_id,omitempty" xml:"guild_id,omitempty"`
	Params               string  `form:"params" json:"params" xml:"params"`
}

// MarketResponseBody is used to define fields on response body types.
type MarketResponseBody struct {
	MarketID    string `form:"market_id" json:"market_id" xml:"market_id"`
	IsPerpetual bool   `form:"is_perpetual" json:"is_perpetual" xml:"is_perpetual"`
}

// SingleAccountPortfolioResponseBody is used to define fields on response body
// types.
type SingleAccountPortfolioResponseBody struct {
	InjectiveAddress string                 `form:"injective_address" json:"injective_address" xml:"injective_address"`
	Balances         []*BalanceResponseBody `form:"balances" json:"balances" xml:"balances"`
	UpdatedAt        int64                  `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// MonthlyAccountPortfolioResponseBody is used to define fields on response
// body types.
type MonthlyAccountPortfolioResponseBody struct {
	Time          uint64                              `form:"time" json:"time" xml:"time"`
	BeginSnapshot *SingleAccountPortfolioResponseBody `form:"begin_snapshot" json:"begin_snapshot" xml:"begin_snapshot"`
	EndSnapshot   *SingleAccountPortfolioResponseBody `form:"end_snapshot" json:"end_snapshot" xml:"end_snapshot"`
}

// NewGetAllGuildsResponseBody builds the HTTP response body from the result of
// the "GetAllGuilds" endpoint of the "GuildsService" service.
func NewGetAllGuildsResponseBody(res *guildsservice.GetAllGuildsResult) *GetAllGuildsResponseBody {
	body := &GetAllGuildsResponseBody{}
	if res.Guilds != nil {
		body.Guilds = make([]*GuildResponseBody, len(res.Guilds))
		for i, val := range res.Guilds {
			body.Guilds[i] = marshalGuildsserviceGuildToGuildResponseBody(val)
		}
	}
	return body
}

// NewGetSingleGuildResponseBody builds the HTTP response body from the result
// of the "GetSingleGuild" endpoint of the "GuildsService" service.
func NewGetSingleGuildResponseBody(res *guildsservice.GetSingleGuildResult) *GetSingleGuildResponseBody {
	body := &GetSingleGuildResponseBody{}
	if res.Guild != nil {
		body.Guild = marshalGuildsserviceGuildToGuildResponseBody(res.Guild)
	}
	return body
}

// NewGetGuildMembersResponseBody builds the HTTP response body from the result
// of the "GetGuildMembers" endpoint of the "GuildsService" service.
func NewGetGuildMembersResponseBody(res *guildsservice.GetGuildMembersResult) *GetGuildMembersResponseBody {
	body := &GetGuildMembersResponseBody{}
	if res.Members != nil {
		body.Members = make([]*GuildMemberResponseBody, len(res.Members))
		for i, val := range res.Members {
			body.Members[i] = marshalGuildsserviceGuildMemberToGuildMemberResponseBody(val)
		}
	}
	return body
}

// NewGetGuildMasterAddressResponseBody builds the HTTP response body from the
// result of the "GetGuildMasterAddress" endpoint of the "GuildsService"
// service.
func NewGetGuildMasterAddressResponseBody(res *guildsservice.GetGuildMasterAddressResult) *GetGuildMasterAddressResponseBody {
	body := &GetGuildMasterAddressResponseBody{
		MasterAddress: res.MasterAddress,
	}
	return body
}

// NewGetGuildDefaultMemberResponseBody builds the HTTP response body from the
// result of the "GetGuildDefaultMember" endpoint of the "GuildsService"
// service.
func NewGetGuildDefaultMemberResponseBody(res *guildsservice.GetGuildDefaultMemberResult) *GetGuildDefaultMemberResponseBody {
	body := &GetGuildDefaultMemberResponseBody{}
	if res.DefaultMember != nil {
		body.DefaultMember = marshalGuildsserviceGuildMemberToGuildMemberResponseBody(res.DefaultMember)
	}
	return body
}

// NewEnterGuildResponseBody builds the HTTP response body from the result of
// the "EnterGuild" endpoint of the "GuildsService" service.
func NewEnterGuildResponseBody(res *guildsservice.EnterGuildResult) *EnterGuildResponseBody {
	body := &EnterGuildResponseBody{
		JoinStatus: res.JoinStatus,
		Message:    res.Message,
	}
	return body
}

// NewLeaveGuildResponseBody builds the HTTP response body from the result of
// the "LeaveGuild" endpoint of the "GuildsService" service.
func NewLeaveGuildResponseBody(res *guildsservice.LeaveGuildResult) *LeaveGuildResponseBody {
	body := &LeaveGuildResponseBody{
		LeaveStatus: res.LeaveStatus,
	}
	return body
}

// NewGetGuildMarketsResponseBody builds the HTTP response body from the result
// of the "GetGuildMarkets" endpoint of the "GuildsService" service.
func NewGetGuildMarketsResponseBody(res *guildsservice.GetGuildMarketsResult) *GetGuildMarketsResponseBody {
	body := &GetGuildMarketsResponseBody{}
	if res.Markets != nil {
		body.Markets = make([]*MarketResponseBody, len(res.Markets))
		for i, val := range res.Markets {
			body.Markets[i] = marshalGuildsserviceMarketToMarketResponseBody(val)
		}
	}
	return body
}

// NewGetGuildPortfoliosResponseBody builds the HTTP response body from the
// result of the "GetGuildPortfolios" endpoint of the "GuildsService" service.
func NewGetGuildPortfoliosResponseBody(res *guildsservice.GetGuildPortfoliosResult) *GetGuildPortfoliosResponseBody {
	body := &GetGuildPortfoliosResponseBody{}
	if res.Portfolios != nil {
		body.Portfolios = make([]*SingleGuildPortfolioResponseBody, len(res.Portfolios))
		for i, val := range res.Portfolios {
			body.Portfolios[i] = marshalGuildsserviceSingleGuildPortfolioToSingleGuildPortfolioResponseBody(val)
		}
	}
	return body
}

// NewGetAccountInfoResponseBody builds the HTTP response body from the result
// of the "GetAccountInfo" endpoint of the "GuildsService" service.
func NewGetAccountInfoResponseBody(res *guildsservice.GetAccountInfoResult) *GetAccountInfoResponseBody {
	body := &GetAccountInfoResponseBody{}
	if res.Data != nil {
		body.Data = marshalGuildsserviceGuildMemberToGuildMemberResponseBody(res.Data)
	}
	return body
}

// NewGetAccountPortfolioResponseBody builds the HTTP response body from the
// result of the "GetAccountPortfolio" endpoint of the "GuildsService" service.
func NewGetAccountPortfolioResponseBody(res *guildsservice.GetAccountPortfolioResult) *GetAccountPortfolioResponseBody {
	body := &GetAccountPortfolioResponseBody{}
	if res.Data != nil {
		body.Data = marshalGuildsserviceSingleAccountPortfolioToSingleAccountPortfolioResponseBody(res.Data)
	}
	return body
}

// NewGetAccountPortfoliosResponseBody builds the HTTP response body from the
// result of the "GetAccountPortfolios" endpoint of the "GuildsService" service.
func NewGetAccountPortfoliosResponseBody(res *guildsservice.GetAccountPortfoliosResult) *GetAccountPortfoliosResponseBody {
	body := &GetAccountPortfoliosResponseBody{}
	if res.Portfolios != nil {
		body.Portfolios = make([]*SingleAccountPortfolioResponseBody, len(res.Portfolios))
		for i, val := range res.Portfolios {
			body.Portfolios[i] = marshalGuildsserviceSingleAccountPortfolioToSingleAccountPortfolioResponseBody(val)
		}
	}
	return body
}

// NewGetAccountMonthlyPortfoliosResponseBody builds the HTTP response body
// from the result of the "GetAccountMonthlyPortfolios" endpoint of the
// "GuildsService" service.
func NewGetAccountMonthlyPortfoliosResponseBody(res *guildsservice.GetAccountMonthlyPortfoliosResult) *GetAccountMonthlyPortfoliosResponseBody {
	body := &GetAccountMonthlyPortfoliosResponseBody{}
	if res.Portfolios != nil {
		body.Portfolios = make([]*MonthlyAccountPortfolioResponseBody, len(res.Portfolios))
		for i, val := range res.Portfolios {
			body.Portfolios[i] = marshalGuildsserviceMonthlyAccountPortfolioToMonthlyAccountPortfolioResponseBody(val)
		}
	}
	return body
}

// NewGetAllGuildsNotFoundResponseBody builds the HTTP response body from the
// result of the "GetAllGuilds" endpoint of the "GuildsService" service.
func NewGetAllGuildsNotFoundResponseBody(res *goa.ServiceError) *GetAllGuildsNotFoundResponseBody {
	body := &GetAllGuildsNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAllGuildsInternalResponseBody builds the HTTP response body from the
// result of the "GetAllGuilds" endpoint of the "GuildsService" service.
func NewGetAllGuildsInternalResponseBody(res *goa.ServiceError) *GetAllGuildsInternalResponseBody {
	body := &GetAllGuildsInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetSingleGuildNotFoundResponseBody builds the HTTP response body from the
// result of the "GetSingleGuild" endpoint of the "GuildsService" service.
func NewGetSingleGuildNotFoundResponseBody(res *goa.ServiceError) *GetSingleGuildNotFoundResponseBody {
	body := &GetSingleGuildNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetSingleGuildInternalResponseBody builds the HTTP response body from the
// result of the "GetSingleGuild" endpoint of the "GuildsService" service.
func NewGetSingleGuildInternalResponseBody(res *goa.ServiceError) *GetSingleGuildInternalResponseBody {
	body := &GetSingleGuildInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMembersNotFoundResponseBody builds the HTTP response body from
// the result of the "GetGuildMembers" endpoint of the "GuildsService" service.
func NewGetGuildMembersNotFoundResponseBody(res *goa.ServiceError) *GetGuildMembersNotFoundResponseBody {
	body := &GetGuildMembersNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMembersInternalResponseBody builds the HTTP response body from
// the result of the "GetGuildMembers" endpoint of the "GuildsService" service.
func NewGetGuildMembersInternalResponseBody(res *goa.ServiceError) *GetGuildMembersInternalResponseBody {
	body := &GetGuildMembersInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMasterAddressNotFoundResponseBody builds the HTTP response body
// from the result of the "GetGuildMasterAddress" endpoint of the
// "GuildsService" service.
func NewGetGuildMasterAddressNotFoundResponseBody(res *goa.ServiceError) *GetGuildMasterAddressNotFoundResponseBody {
	body := &GetGuildMasterAddressNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMasterAddressInternalResponseBody builds the HTTP response body
// from the result of the "GetGuildMasterAddress" endpoint of the
// "GuildsService" service.
func NewGetGuildMasterAddressInternalResponseBody(res *goa.ServiceError) *GetGuildMasterAddressInternalResponseBody {
	body := &GetGuildMasterAddressInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildDefaultMemberNotFoundResponseBody builds the HTTP response body
// from the result of the "GetGuildDefaultMember" endpoint of the
// "GuildsService" service.
func NewGetGuildDefaultMemberNotFoundResponseBody(res *goa.ServiceError) *GetGuildDefaultMemberNotFoundResponseBody {
	body := &GetGuildDefaultMemberNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildDefaultMemberInternalResponseBody builds the HTTP response body
// from the result of the "GetGuildDefaultMember" endpoint of the
// "GuildsService" service.
func NewGetGuildDefaultMemberInternalResponseBody(res *goa.ServiceError) *GetGuildDefaultMemberInternalResponseBody {
	body := &GetGuildDefaultMemberInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewEnterGuildNotFoundResponseBody builds the HTTP response body from the
// result of the "EnterGuild" endpoint of the "GuildsService" service.
func NewEnterGuildNotFoundResponseBody(res *goa.ServiceError) *EnterGuildNotFoundResponseBody {
	body := &EnterGuildNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewEnterGuildInternalResponseBody builds the HTTP response body from the
// result of the "EnterGuild" endpoint of the "GuildsService" service.
func NewEnterGuildInternalResponseBody(res *goa.ServiceError) *EnterGuildInternalResponseBody {
	body := &EnterGuildInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLeaveGuildNotFoundResponseBody builds the HTTP response body from the
// result of the "LeaveGuild" endpoint of the "GuildsService" service.
func NewLeaveGuildNotFoundResponseBody(res *goa.ServiceError) *LeaveGuildNotFoundResponseBody {
	body := &LeaveGuildNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewLeaveGuildInternalResponseBody builds the HTTP response body from the
// result of the "LeaveGuild" endpoint of the "GuildsService" service.
func NewLeaveGuildInternalResponseBody(res *goa.ServiceError) *LeaveGuildInternalResponseBody {
	body := &LeaveGuildInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMarketsNotFoundResponseBody builds the HTTP response body from
// the result of the "GetGuildMarkets" endpoint of the "GuildsService" service.
func NewGetGuildMarketsNotFoundResponseBody(res *goa.ServiceError) *GetGuildMarketsNotFoundResponseBody {
	body := &GetGuildMarketsNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildMarketsInternalResponseBody builds the HTTP response body from
// the result of the "GetGuildMarkets" endpoint of the "GuildsService" service.
func NewGetGuildMarketsInternalResponseBody(res *goa.ServiceError) *GetGuildMarketsInternalResponseBody {
	body := &GetGuildMarketsInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildPortfoliosNotFoundResponseBody builds the HTTP response body from
// the result of the "GetGuildPortfolios" endpoint of the "GuildsService"
// service.
func NewGetGuildPortfoliosNotFoundResponseBody(res *goa.ServiceError) *GetGuildPortfoliosNotFoundResponseBody {
	body := &GetGuildPortfoliosNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetGuildPortfoliosInternalResponseBody builds the HTTP response body from
// the result of the "GetGuildPortfolios" endpoint of the "GuildsService"
// service.
func NewGetGuildPortfoliosInternalResponseBody(res *goa.ServiceError) *GetGuildPortfoliosInternalResponseBody {
	body := &GetGuildPortfoliosInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountInfoNotFoundResponseBody builds the HTTP response body from the
// result of the "GetAccountInfo" endpoint of the "GuildsService" service.
func NewGetAccountInfoNotFoundResponseBody(res *goa.ServiceError) *GetAccountInfoNotFoundResponseBody {
	body := &GetAccountInfoNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountInfoInternalResponseBody builds the HTTP response body from the
// result of the "GetAccountInfo" endpoint of the "GuildsService" service.
func NewGetAccountInfoInternalResponseBody(res *goa.ServiceError) *GetAccountInfoInternalResponseBody {
	body := &GetAccountInfoInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountPortfolioNotFoundResponseBody builds the HTTP response body
// from the result of the "GetAccountPortfolio" endpoint of the "GuildsService"
// service.
func NewGetAccountPortfolioNotFoundResponseBody(res *goa.ServiceError) *GetAccountPortfolioNotFoundResponseBody {
	body := &GetAccountPortfolioNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountPortfolioInternalResponseBody builds the HTTP response body
// from the result of the "GetAccountPortfolio" endpoint of the "GuildsService"
// service.
func NewGetAccountPortfolioInternalResponseBody(res *goa.ServiceError) *GetAccountPortfolioInternalResponseBody {
	body := &GetAccountPortfolioInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountPortfoliosNotFoundResponseBody builds the HTTP response body
// from the result of the "GetAccountPortfolios" endpoint of the
// "GuildsService" service.
func NewGetAccountPortfoliosNotFoundResponseBody(res *goa.ServiceError) *GetAccountPortfoliosNotFoundResponseBody {
	body := &GetAccountPortfoliosNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountPortfoliosInternalResponseBody builds the HTTP response body
// from the result of the "GetAccountPortfolios" endpoint of the
// "GuildsService" service.
func NewGetAccountPortfoliosInternalResponseBody(res *goa.ServiceError) *GetAccountPortfoliosInternalResponseBody {
	body := &GetAccountPortfoliosInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountMonthlyPortfoliosNotFoundResponseBody builds the HTTP response
// body from the result of the "GetAccountMonthlyPortfolios" endpoint of the
// "GuildsService" service.
func NewGetAccountMonthlyPortfoliosNotFoundResponseBody(res *goa.ServiceError) *GetAccountMonthlyPortfoliosNotFoundResponseBody {
	body := &GetAccountMonthlyPortfoliosNotFoundResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetAccountMonthlyPortfoliosInternalResponseBody builds the HTTP response
// body from the result of the "GetAccountMonthlyPortfolios" endpoint of the
// "GuildsService" service.
func NewGetAccountMonthlyPortfoliosInternalResponseBody(res *goa.ServiceError) *GetAccountMonthlyPortfoliosInternalResponseBody {
	body := &GetAccountMonthlyPortfoliosInternalResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetSingleGuildPayload builds a GuildsService service GetSingleGuild
// endpoint payload.
func NewGetSingleGuildPayload(guildID string) *guildsservice.GetSingleGuildPayload {
	v := &guildsservice.GetSingleGuildPayload{}
	v.GuildID = guildID

	return v
}

// NewGetGuildMembersPayload builds a GuildsService service GetGuildMembers
// endpoint payload.
func NewGetGuildMembersPayload(guildID string) *guildsservice.GetGuildMembersPayload {
	v := &guildsservice.GetGuildMembersPayload{}
	v.GuildID = guildID

	return v
}

// NewGetGuildMasterAddressPayload builds a GuildsService service
// GetGuildMasterAddress endpoint payload.
func NewGetGuildMasterAddressPayload(guildID string) *guildsservice.GetGuildMasterAddressPayload {
	v := &guildsservice.GetGuildMasterAddressPayload{}
	v.GuildID = guildID

	return v
}

// NewGetGuildDefaultMemberPayload builds a GuildsService service
// GetGuildDefaultMember endpoint payload.
func NewGetGuildDefaultMemberPayload(guildID string) *guildsservice.GetGuildDefaultMemberPayload {
	v := &guildsservice.GetGuildDefaultMemberPayload{}
	v.GuildID = guildID

	return v
}

// NewEnterGuildPayload builds a GuildsService service EnterGuild endpoint
// payload.
func NewEnterGuildPayload(body *EnterGuildRequestBody, guildID string) *guildsservice.EnterGuildPayload {
	v := &guildsservice.EnterGuildPayload{
		InjectiveAddress: *body.InjectiveAddress,
		Params:           body.Params,
	}
	v.GuildID = guildID

	return v
}

// NewLeaveGuildPayload builds a GuildsService service LeaveGuild endpoint
// payload.
func NewLeaveGuildPayload(guildID string, injectiveAddress string) *guildsservice.LeaveGuildPayload {
	v := &guildsservice.LeaveGuildPayload{}
	v.GuildID = guildID
	v.InjectiveAddress = injectiveAddress

	return v
}

// NewGetGuildMarketsPayload builds a GuildsService service GetGuildMarkets
// endpoint payload.
func NewGetGuildMarketsPayload(guildID string) *guildsservice.GetGuildMarketsPayload {
	v := &guildsservice.GetGuildMarketsPayload{}
	v.GuildID = guildID

	return v
}

// NewGetGuildPortfoliosPayload builds a GuildsService service
// GetGuildPortfolios endpoint payload.
func NewGetGuildPortfoliosPayload(guildID string, startTime *int64, endTime *int64) *guildsservice.GetGuildPortfoliosPayload {
	v := &guildsservice.GetGuildPortfoliosPayload{}
	v.GuildID = guildID
	v.StartTime = startTime
	v.EndTime = endTime

	return v
}

// NewGetAccountInfoPayload builds a GuildsService service GetAccountInfo
// endpoint payload.
func NewGetAccountInfoPayload(injectiveAddress string) *guildsservice.GetAccountInfoPayload {
	v := &guildsservice.GetAccountInfoPayload{}
	v.InjectiveAddress = injectiveAddress

	return v
}

// NewGetAccountPortfolioPayload builds a GuildsService service
// GetAccountPortfolio endpoint payload.
func NewGetAccountPortfolioPayload(injectiveAddress string) *guildsservice.GetAccountPortfolioPayload {
	v := &guildsservice.GetAccountPortfolioPayload{}
	v.InjectiveAddress = injectiveAddress

	return v
}

// NewGetAccountPortfoliosPayload builds a GuildsService service
// GetAccountPortfolios endpoint payload.
func NewGetAccountPortfoliosPayload(injectiveAddress string, startTime *int64, endTime *int64) *guildsservice.GetAccountPortfoliosPayload {
	v := &guildsservice.GetAccountPortfoliosPayload{}
	v.InjectiveAddress = injectiveAddress
	v.StartTime = startTime
	v.EndTime = endTime

	return v
}

// NewGetAccountMonthlyPortfoliosPayload builds a GuildsService service
// GetAccountMonthlyPortfolios endpoint payload.
func NewGetAccountMonthlyPortfoliosPayload(injectiveAddress string, startTime *int64, endTime *int64) *guildsservice.GetAccountMonthlyPortfoliosPayload {
	v := &guildsservice.GetAccountMonthlyPortfoliosPayload{}
	v.InjectiveAddress = injectiveAddress
	v.StartTime = startTime
	v.EndTime = endTime

	return v
}

// ValidateEnterGuildRequestBody runs the validations defined on
// EnterGuildRequestBody
func ValidateEnterGuildRequestBody(body *EnterGuildRequestBody) (err error) {
	if body.InjectiveAddress == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("injective_address", "body"))
	}
	return
}
