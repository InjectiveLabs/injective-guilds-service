// Code generated by goa v3.6.2, DO NOT EDIT.
//
// GuildService endpoints
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-guilds-service/api/design -o ../

package guildservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "GuildService" service endpoints.
type Endpoints struct {
	GetAllGuilds          goa.Endpoint
	GetSingleGuild        goa.Endpoint
	GetGuildMembers       goa.Endpoint
	GetGuildMasterAddress goa.Endpoint
	GetGuildDefaultMember goa.Endpoint
	EnterGuild            goa.Endpoint
	LeaveGuild            goa.Endpoint
	GetGuildMarkets       goa.Endpoint
	GetAccountPortfolio   goa.Endpoint
	GetAccountPortfolios  goa.Endpoint
}

// NewEndpoints wraps the methods of the "GuildService" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetAllGuilds:          NewGetAllGuildsEndpoint(s),
		GetSingleGuild:        NewGetSingleGuildEndpoint(s),
		GetGuildMembers:       NewGetGuildMembersEndpoint(s),
		GetGuildMasterAddress: NewGetGuildMasterAddressEndpoint(s),
		GetGuildDefaultMember: NewGetGuildDefaultMemberEndpoint(s),
		EnterGuild:            NewEnterGuildEndpoint(s),
		LeaveGuild:            NewLeaveGuildEndpoint(s),
		GetGuildMarkets:       NewGetGuildMarketsEndpoint(s),
		GetAccountPortfolio:   NewGetAccountPortfolioEndpoint(s),
		GetAccountPortfolios:  NewGetAccountPortfoliosEndpoint(s),
	}
}

// Use applies the given middleware to all the "GuildService" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetAllGuilds = m(e.GetAllGuilds)
	e.GetSingleGuild = m(e.GetSingleGuild)
	e.GetGuildMembers = m(e.GetGuildMembers)
	e.GetGuildMasterAddress = m(e.GetGuildMasterAddress)
	e.GetGuildDefaultMember = m(e.GetGuildDefaultMember)
	e.EnterGuild = m(e.EnterGuild)
	e.LeaveGuild = m(e.LeaveGuild)
	e.GetGuildMarkets = m(e.GetGuildMarkets)
	e.GetAccountPortfolio = m(e.GetAccountPortfolio)
	e.GetAccountPortfolios = m(e.GetAccountPortfolios)
}

// NewGetAllGuildsEndpoint returns an endpoint function that calls the method
// "GetAllGuilds" of service "GuildService".
func NewGetAllGuildsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.GetAllGuilds(ctx)
	}
}

// NewGetSingleGuildEndpoint returns an endpoint function that calls the method
// "GetSingleGuild" of service "GuildService".
func NewGetSingleGuildEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetSingleGuildPayload)
		return s.GetSingleGuild(ctx, p)
	}
}

// NewGetGuildMembersEndpoint returns an endpoint function that calls the
// method "GetGuildMembers" of service "GuildService".
func NewGetGuildMembersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetGuildMembersPayload)
		return s.GetGuildMembers(ctx, p)
	}
}

// NewGetGuildMasterAddressEndpoint returns an endpoint function that calls the
// method "GetGuildMasterAddress" of service "GuildService".
func NewGetGuildMasterAddressEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetGuildMasterAddressPayload)
		return s.GetGuildMasterAddress(ctx, p)
	}
}

// NewGetGuildDefaultMemberEndpoint returns an endpoint function that calls the
// method "GetGuildDefaultMember" of service "GuildService".
func NewGetGuildDefaultMemberEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetGuildDefaultMemberPayload)
		return s.GetGuildDefaultMember(ctx, p)
	}
}

// NewEnterGuildEndpoint returns an endpoint function that calls the method
// "EnterGuild" of service "GuildService".
func NewEnterGuildEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*EnterGuildPayload)
		return s.EnterGuild(ctx, p)
	}
}

// NewLeaveGuildEndpoint returns an endpoint function that calls the method
// "LeaveGuild" of service "GuildService".
func NewLeaveGuildEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*LeaveGuildPayload)
		return s.LeaveGuild(ctx, p)
	}
}

// NewGetGuildMarketsEndpoint returns an endpoint function that calls the
// method "GetGuildMarkets" of service "GuildService".
func NewGetGuildMarketsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetGuildMarketsPayload)
		return s.GetGuildMarkets(ctx, p)
	}
}

// NewGetAccountPortfolioEndpoint returns an endpoint function that calls the
// method "GetAccountPortfolio" of service "GuildService".
func NewGetAccountPortfolioEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPortfolioPayload)
		return s.GetAccountPortfolio(ctx, p)
	}
}

// NewGetAccountPortfoliosEndpoint returns an endpoint function that calls the
// method "GetAccountPortfolios" of service "GuildService".
func NewGetAccountPortfoliosEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetAccountPortfoliosPayload)
		return s.GetAccountPortfolios(ctx, p)
	}
}
